<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <!-- This assembly only stays in the Editor, so embed pdbs in the dll to help debugging -->
    <DebugType>embedded</DebugType>
    <OutDir>$(PackageEditorPath)/iOS</OutDir>
  </PropertyGroup>
  <ItemGroup>
    <ProjectReference Include="../sentry-dotnet/src/Sentry/Sentry.csproj" Private="false" />
    <ProjectReference Include="../Sentry.Unity/Sentry.Unity.csproj" Private="false" />
  </ItemGroup>

  <!-- Add reference once we figure out where the DLL is (find Unity version and install location) -->
  <Target Name="FindIOSBuildTools" AfterTargets="FindUnity" BeforeTargets="BeforeResolveReferences">

    <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('OSX'))">
      <IOSBuildTools>$(UnityRoot)/../PlaybackEngines/iOSSupport/UnityEditor.iOS.Extensions.Xcode.dll</IOSBuildTools>
    </PropertyGroup>

    <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Windows'))">
      <IOSBuildTools>$(UnityRoot)/Data/PlaybackEngines/iOSSupport/UnityEditor.iOS.Extensions.Xcode.dll</IOSBuildTools>
    </PropertyGroup>

    <Error Condition="!Exists('$(IOSBuildTools)')" Text="iOS build tools not found. Make sure to install the Unity iOS Module. Expected directory: $(IOSBuildTools)"></Error>

    <ItemGroup>
      <Reference Include="UnityEditor">
        <HintPath>$(UnityManagedPath)/UnityEditor.dll</HintPath>
        <Private>false</Private>
      </Reference>
      <Reference Include="UnityEditor.iOS.Extensions.Xcode">
        <HintPath>$(IOSBuildTools)</HintPath>
        <Private>false</Private>
      </Reference>
    </ItemGroup>
  </Target>
</Project>
