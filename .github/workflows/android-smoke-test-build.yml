on:
  workflow_call:
    inputs:
      unity-version:
        required: true
        type: string

defaults:
  run:
    shell: pwsh

jobs:
  build:
    name: ${{ inputs.unity-version }}
    runs-on: ubuntu-latest
    env:
      UNITY_PATH: docker exec unity unity-editor
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@f68fdb76e2ea636224182cfb7377ff9a1708f9b8
        with:
          android: true
          dotnet: false
          haskell: true
          large-packages: false
          docker-images: false
          swap-storage: true

      - run: echo "::add-mask::${{ secrets.LICENSE_SERVER_URL }}"

      - name: Docker Login
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # pinned v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} 
          password: ${{ secrets.GITHUB_TOKEN }} 

      - name: Start the Unity docker container
        run: ./scripts/ci-docker.sh '${{ inputs.unity-version }}' 'android' '${{ secrets.UNITY_LICENSE_SERVER_CONFIG }}'
        shell: bash

      # Workaround for missing libMonoPosixHelper.so
      # See https://github.com/getsentry/sentry-unity/pull/1295
      - name: Install mono-devel
        if: ${{ inputs.unity-version == '2019' }}
        run: |
          docker exec --user root unity apt-get update
          docker exec --user root unity apt-get -y -q install mono-devel

      - name: Download IntegrationTest project
        uses: actions/download-artifact@v4
        with:
          name: smoke-test-${{ inputs.unity-version }}

      - name: Extract project archive
        run: tar -xvzf test-project.tar.gz

    #   - name: Build without Sentry SDK
    #     run: ./test/Scripts.Integration.Test/build-project.ps1 -UnityPath "${{ env.UNITY_PATH }}" -Platform "Android"

      - name: Download UPM package
        uses: vaind/download-artifact@e7141b6a94ef28aa3d828b52830cfa1f406a1848
        with:
          name: ${{ github.sha }}
          wait-timeout: 3600

      - name: Extract UPM package
        run: ./test/Scripts.Integration.Test/extract-package.ps1

      - name: Add Sentry to the project
        run: ./test/Scripts.Integration.Test/add-sentry.ps1 -UnityPath "${{ env.UNITY_PATH }}"

      - name: Configure Sentry
        run: ./test/Scripts.Integration.Test/configure-sentry.ps1 -UnityPath "${{ env.UNITY_PATH }}" -Platform "Android" -CheckSymbols

      - name: Export Project - Runtime
        run: ./test/Scripts.Integration.Test/build-project.ps1 -UnityPath "${{ env.UNITY_PATH }}" -Platform "Android" -CheckSymbols:$true -UnityVersion "${{ inputs.unity-version }}"

      # - name: Build Gradle Project - Runtime
      #   run: ./scripts/smoke-test-android.ps1 Build -IsIntegrationTest -UnityVersion "${{ inputs.unity-version }}"

      - name: Upload app
        uses: actions/upload-artifact@v4
        with:
          name: testapp-android-compiled-${{ inputs.unity-version }}-runtime
          # Collect app but ignore the files that are not required for the test.
          path: |
            samples/IntegrationTest/Build/*.apk
          retention-days: 14 # Lower retention period - we only need this to retry CI.

      - name: Configure Sentry for mobile platforms (build-time initialization)
        run: |
          $optionsPath = "samples/IntegrationTest/Assets/Scripts/OptionsConfiguration.cs"
          $content = Get-Content $optionsPath -Raw
          $content = $content -replace 'AndroidNativeInitializationType = NativeInitializationType.Runtime', 'AndroidNativeInitializationType = NativeInitializationType.BuildTime'
          Set-Content $optionsPath $content

      - name: Export Project - Build Time
        run: ./test/Scripts.Integration.Test/build-project.ps1 -UnityPath "${{ env.UNITY_PATH }}" -Platform "Android" -CheckSymbols:$true -UnityVersion "${{ inputs.unity-version }}"

      # - name: Build Gradle Project - Build Time
      #   run: ./scripts/smoke-test-android.ps1 Build -IsIntegrationTest -UnityVersion "${{ inputs.unity-version }}"

      - name: Upload app
        uses: actions/upload-artifact@v4
        with:
          name: testapp-android-compiled-${{ inputs.unity-version }}-buildtime
          # Collect app but ignore the files that are not required for the test.
          path: |
            samples/IntegrationTest/Build/*.apk
          retention-days: 14 # Lower retention period - we only need this to retry CI.
          
      - name: Upload IntegrationTest project on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: failed-project-android-${{ inputs.unity-version }}
          path: |
            samples/IntegrationTest
            !samples/IntegrationTest/Build/*_BackUpThisFolder_ButDontShipItWithYourGame
          retention-days: 14 # Lower retention period - we only need this to retry CI.