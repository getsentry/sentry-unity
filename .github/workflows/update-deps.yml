name: Update Dependencies

on:
  # Run every day.
  schedule:
    - cron: '0 3 * * *'
  # And on on every PR merge so we get the updated dependencies ASAP, and to make sure the changelog doesn't conflict.
  push:
    # branches:
    #   - main

jobs:
  cocoa:
    uses: ./.github/workflows/submodule-updater.yml
    with:
      path: modules/sentry-cocoa
      name: Cocoa SDK

  java:
    uses: ./.github/workflows/submodule-updater.yml
    with:
      path: modules/sentry-java
      name: Java SDK

  native:
    uses: ./.github/workflows/submodule-updater.yml
    with:
      path: modules/sentry-native
      name: Native SDK

  dotnet:
    uses: ./.github/workflows/submodule-updater.yml
    with:
      path: src/sentry-dotnet
      name: .NET SDK

  unity:
    name: Unity ${{ matrix.unity-prefix }} PR
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
    strategy:
      fail-fast: false
      matrix:
        unity-prefix: ['2019.', '2020.', '2021.']
    steps:
      - name: Find the latest Unity version
        id: version-select
        run: |
          $page = Invoke-WebRequest -UseBasicParsing -Uri 'https://unity3d.com/get-unity/download/archive'
          $hubPrefix = "unityhub://"
          $items = $page.Links.Href | Select-String -Pattern $hubPrefix | ForEach-Object { $_.ToString().Substring($hubPrefix.Length) }
          $items = $items | Select-String -Pattern "${{ matrix.unity-prefix }}"
          $version,$changeset = $items[0].ToString().split("/")
          echo "::set-output name=version::$version"
          echo "::set-output name=changeset::$changeset"
          echo "Latest version: $version ($changeset)"

      - uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.CI_DEPLOY_KEY }}

      - name: Update sample ProjectVersion.txt
        if: ${{ matrix.unity-prefix == '2019.' }}
        run: |
          "m_EditorVersion: ${{ steps.version-select.outputs.version }}`nm_EditorVersionWithRevision: ${{ steps.version-select.outputs.version }} (${{ steps.version-select.outputs.changeset }})" `
            | Out-File "samples\unity-of-bugs\ProjectSettings\ProjectVersion.txt"

      - name: Update ci-env.ps1
        run: |
          $file = "scripts/ci-env.ps1"
          $regexVersion = '${{ matrix.unity-prefix }}'.Replace(".", "\.") + "[0-9.a-z]+"
          echo "Regex: $regexVersion"
          (Get-Content $file) -replace $regexVersion, '${{ steps.version-select.outputs.version }}' | Out-File $file

      - run: git --no-pager diff

      - name: Create PR
        uses: peter-evans/create-pull-request@f22a7da129c901513876a2380e2dae9f8e145330
        with:
          branch: chore/unity-${{ steps.version-select.outputs.version }}
          commit-message: 'chore: update to Unity ${{ steps.version-select.outputs.version }}'
          title: 'Update to Unity ${{ steps.version-select.outputs.version }}'
          base: main
          body: |
            #skip-changelog

            Auto-generated by [create-pull-request](https://github.com/peter-evans/create-pull-request)
          labels: Repository Maintenance
