name: Update Dependencies

on:
  # XXX
  push:
    branches:
      - 'ci/unity-auto-update'
  # schedule:
  #   - cron:  '0 3 * * *'

jobs:
  update-dep:
    name: Unity ${{ matrix.unity-prefix }} PR
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
    strategy:
      fail-fast: false
      matrix:
        unity-prefix: ['2019.', '2020.', '2021.']
    steps:
      - name: Find the latest Unity version
        id: version-select
        run: |
          $page = Invoke-WebRequest -UseBasicParsing -Uri 'https://unity3d.com/get-unity/download/archive'
          $hubPrefix = "unityhub://"
          $items = $page.Links.Href | Select-String -Pattern $hubPrefix | ForEach-Object { $_.ToString().Substring($hubPrefix.Length) }
          $items = $items | Select-String -Pattern "${{ matrix.unity-prefix }}"
          $version,$changeset = $items[0].ToString().split("/")
          echo "::set-output name=version::$version"
          echo "::set-output name=changeset::$changeset"
          echo "Latest version: $version ($changeset)"

      - uses: actions/checkout@v2

      - name: Update sample ProjectVersion.txt
        if: ${{ matrix.unity-prefix == '2019.' }}
        run: |
          "m_EditorVersion: ${{ steps.version-select.outputs.version }}`nm_EditorVersionWithRevision: ${{ steps.version-select.outputs.version }} (${{ steps.version-select.outputs.changeset }})" `
            | Out-File "samples\unity-of-bugs\ProjectSettings\ProjectVersion.txt"

      - name: Update ci.yml
        run: |
          "m_EditorVersion: ${{ steps.version-select.outputs.version }}`nm_EditorVersionWithRevision: ${{ steps.version-select.outputs.version }} (${{ steps.version-select.outputs.changeset }})" `
            | Out-File "samples\unity-of-bugs\ProjectSettings\ProjectVersion.txt"
          $regexVersion = '${{ matrix.unity-prefix }}'.Replace(".", "\.") + "[0-9.a-z]+"
          echo "Regex: $regexVersion"
          $ci = Get-Content .github\workflows\ci.yml
          $ci = $ci -replace $regexVersion, '${{ steps.version-select.outputs.version }}'
          # $ci | Out-File .github\workflows\ci.yml
          $ci

      - name: Create PR
        uses: peter-evans/create-pull-request@v3
        with:
          # token: TODO
          branch: chore/unity-${{ steps.version-select.outputs.version }}
          commit-message: 'chore: update to Unity ${{ steps.version-select.outputs.version }}'
          title: 'Update to Unity ${{ steps.version-select.outputs.version }}'
          base: main
          body: |
            #skip-changelog

            Auto-generated by [create-pull-request](https://github.com/peter-evans/create-pull-request)
          labels: Repository Maintenance
