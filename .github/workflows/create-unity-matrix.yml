name: Create Unity Version Matrix

on:
  workflow_call:
    inputs:
      event-name:
        description: 'Event name (pull_request, push, etc.)'
        required: true
        type: string
    outputs:
      unity-matrix:
        description: 'Simple Unity version matrix'
        value: ${{ jobs.create-unity-matrix.outputs.unity-matrix }}
      build-matrix:
        description: 'Build matrix with platforms'
        value: ${{ jobs.create-unity-matrix.outputs.build-matrix }}
      android-matrix:
        description: 'Android matrix with API levels and init types'
        value: ${{ jobs.create-unity-matrix.outputs.android-matrix }}
      ios-matrix:
        description: 'iOS matrix with iOS versions and init types'
        value: ${{ jobs.create-unity-matrix.outputs.ios-matrix }}
      desktop-matrix:
        description: 'Desktop matrix with OS configurations'
        value: ${{ jobs.create-unity-matrix.outputs.desktop-matrix }}

env:
  # Unity versions used in PRs
  PR_UNITY_VERSIONS: '["2022.3", "6000.0"]'
  # Unity versions used on main branch
  FULL_UNITY_VERSIONS: '["2021.3", "2022.3", "6000.0", "6000.1"]'

jobs:
  create-unity-matrix:
    runs-on: ubuntu-latest
    outputs:
      unity-matrix: ${{ steps.set-matrix.outputs.matrix }}
      build-matrix: ${{ steps.set-matrix.outputs.build-matrix }}
      android-matrix: ${{ steps.set-matrix.outputs.android-matrix }}
      ios-matrix: ${{ steps.set-matrix.outputs.ios-matrix }}
      desktop-matrix: ${{ steps.set-matrix.outputs.desktop-matrix }}
    steps:
      - name: Set Unity version matrices based on event type
        id: set-matrix
        shell: bash
        run: |
          if [[ "${{ inputs.event-name }}" == "pull_request" ]]; then
            versions='${{ env.PR_UNITY_VERSIONS }}'
          else
            versions='${{ env.FULL_UNITY_VERSIONS }}'
          fi
          
          # Simple unity-version only matrix
          echo "matrix={\"unity-version\":$versions}" >> $GITHUB_OUTPUT
          
          # Build matrix with platforms
          cat << EOF >> $GITHUB_OUTPUT
          build-matrix={
            "unity-version": $versions,
            "platform": ["WebGL", "Linux"],
            "include": [
              {
                "platform": "WebGL",
                "check_symbols": true,
                "build_platform": "WebGL"
              },
              {
                "platform": "Linux", 
                "image-suffix": "-il2cpp",
                "check_symbols": true,
                "build_platform": "Linux"
              }
            ]
          }
          EOF
          
          # Android matrix with API levels and init types
          cat << EOF >> $GITHUB_OUTPUT
          android-matrix={
            "api-level": [30, 31, 34],
            "init-type": ["runtime", "buildtime"],
            "unity-version": $versions
          }
          EOF
          
          # iOS matrix with iOS versions and init types
          cat << EOF >> $GITHUB_OUTPUT
          ios-matrix={
            "unity-version": $versions,
            "ios-version": ["17.0", "latest"],
            "init-type": ["runtime", "buildtime"]
          }
          EOF
          
          # Desktop matrix with OS
          cat << EOF >> $GITHUB_OUTPUT
          desktop-matrix={
            "unity-version": $versions,
            "os": ["windows"],
            "include": [
              {
                "os": "windows",
                "unity-modules": "windows-il2cpp", 
                "unity-config-path": "C:/ProgramData/Unity/config/"
              }
            ]
          }
          EOF