<Project>
  <Import Project="../Directory.Build.props" />

  <PropertyGroup>
    <PackageRuntimeTestsPath>../../$(DevPackageFolderName)/Tests/Runtime</PackageRuntimeTestsPath>
    <PackageEditorTestsPath>../../$(DevPackageFolderName)/Tests/Editor</PackageEditorTestsPath>
  </PropertyGroup>

  <!-- Starting with the 2021 LTS Unity's TestRunner targets netstandard2.1 -->
  <PropertyGroup Condition="$(UnityVersion.StartsWith('2021')) or $(UnityVersion.StartsWith('2022'))">
    <TargetFramework>netstandard2.1</TargetFramework>
  </PropertyGroup>

  <Target Name="PrintVersions" BeforeTargets="BeforeResolveReferences" Condition="'$(MSBuildProjectName)' == 'Sentry.Unity.Tests'">
    <Message Text="Building the Tests with:%0a    UnityVersion: $(UnityVersion)%0a    TargetFramework: $(TargetFramework)" Importance="High" />
  </Target>

  <!-- Add reference once we figure out where the DLL is (find Unity version and install location) -->
  <Target Name="ReferenceUnityEditor" BeforeTargets="BeforeResolveReferences">
    <ItemGroup>
      <Reference Include="UnityEditor">
        <HintPath>$(UnityManagedPath)/UnityEditor.dll</HintPath>
        <Private>false</Private>
      </Reference>
      <Reference Include="UnityEditor.TestRunner">
        <HintPath>$(UnityTemplateAssemblyPath)/UnityEditor.TestRunner.dll</HintPath>
        <Private>false</Private>
      </Reference>
      <Reference Include="UnityEngine.TestRunner">
        <HintPath>$(UnityTemplateAssemblyPath)/UnityEngine.TestRunner.dll</HintPath>
        <Private>false</Private>
      </Reference>

<!--  TODO: The parent directory contains a 'UnityEngine.dll' but that one is different? But if that one does not get -->
<!--      referenced here and we just add the CoreModule it leads to 'ambiguous references' and 'Type exists in both -->
<!--      'UnityEngine.CoreModule and UnityEngine' -->
      <Reference Include="UnityEngine">
        <HintPath>$(UnityManagedPath)/UnityEngine/UnityEngine.dll</HintPath>
        <Private>false</Private>
      </Reference>
      <Reference Include="UnityEngine.CoreModule">
        <HintPath>$(UnityManagedPath)/UnityEngine/UnityEngine.CoreModule.dll</HintPath>
        <Private>false</Private>
      </Reference>
      <!-- Used for texture.loadImage in tests -->
      <Reference Include="UnityEngine.ImageConversionModule">
        <HintPath>$(UnityManagedPath)/UnityEngine/UnityEngine.ImageConversionModule.dll</HintPath>
        <Private>false</Private>
      </Reference>
    </ItemGroup>
    <Error Condition="!Exists('$(UnityTemplateAssemblyPath)/UnityEngine.TestRunner.dll')" Text="TestRunner not found. Expected: $(UnityTemplateAssemblyPath)/UnityEngine.TestRunner.dll" />
  </Target>

  <PropertyGroup>
    <!-- warning NU1701: Package 'NUnit 3.5.0' was restored using '.NETFramework,Version=v4.6.1
      Can this be restored for ns2.0? -->
    <NoWarn>$(NoWarn);NU1701</NoWarn>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="NUnit" Version="3.5.0" />
  </ItemGroup>

</Project>
